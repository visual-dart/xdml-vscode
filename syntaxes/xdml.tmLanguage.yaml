version: >-
  https://github.com/atom/language-xml/commit/7bc75dfe779ad5b35d9bf4013d9181864358cb49
name: XDML
scopeName: text.dart.xaml
patterns:
  - begin: '(<\?)\s*([-_a-zA-Z0-9]+)'
    captures:
      1: { name: punctuation.definition.tag.xdml }
      2: { name: entity.name.tag.xdml }
    end: (\?>)
    name: meta.tag.preprocessor.xdml
    patterns:
      - match: " ([a-zA-Z-]+)"
        name: entity.other.attribute-name.xdml
      - include: "#double-quoted-string-expression"
      - include: "#single-quoted-string-expression"
  - begin: '(<!)(DOCTYPE)\s+([:a-zA-Z_][:a-zA-Z0-9_.-]*)'
    captures:
      1: { name: punctuation.definition.tag.xdml }
      2: { name: keyword.other.doctype.xdml }
      3: { name: variable.language.documentroot.xdml }
    end: \s*(>)
    name: meta.tag.sgml.doctype.xdml
    patterns:
      - include: "#internalSubset"
  - include: "#comments"
  # tag without content
  - begin: '(<)((([-_a-zA-Z0-9]+)(:))?([-_a-zA-Z0-9:]+))(?=(\s[^>]*)?></\2>)'
    beginCaptures:
      1: { name: punctuation.definition.tag.xdml }
      2: { name: markup.bold.namespace.xdml }
      3: { name: markup.italic.namespace.xdml }
      4: { name: markup.italic.namespace.xdml }
      5: { name: punctuation.definition.tag.xdml }
      6: { name: entity.name.function.localname.xdml }
    end: "(>)(</)((([-_a-zA-Z0-9]+)(:))?([-_a-zA-Z0-9:]+))(>)"
    endCaptures:
      1: { name: punctuation.definition.tag.xdml }
      2: { name: punctuation.definition.tag.xdml }
      3: { name: markup.bold.namespace.xdml }
      4: { name: markup.italic.namespace.xdml }
      5: { name: markup.italic.namespace.xdml }
      6: { name: punctuation.definition.tag.xdml }
      7: { name: entity.name.function.localname.xdml }
      8: { name: punctuation.definition.tag.xdml }
    name: entity.name.type.localname.xdml
    patterns:
      - include: "#ns-bind-tag-stuff"
      - include: "#ns-bind-tag-stuff-single"
      - include: "#tagStuff"
  # tag with content
  - begin: '(</?)((([-\w\.]+)((:)))?([-\w\.:]+))'
    captures:
      1: { name: punctuation.definition.tag.xdml }
      2: { name: markup.bold.namespace.xdml }
      3: { name: markup.italic.namespace.xdml }
      4: { name: markup.italic.namespace.xdml }
      5: { name: markup.italic.namespace.xdml }
      6: { name: punctuation.definition.tag.xdml }
      7: { name: entity.name.function.localname.xdml }
    end: (/?>)
    name: entity.name.type.localname.xdml
    patterns:
      - include: "#ns-bind-tag-stuff"
      - include: "#ns-bind-tag-stuff-single"
      - include: "#tagStuff"
  - include: "#entity"
  - include: "#bare-ampersand"
  - include: "#insert-multiline-expression"
  - begin: <%@
    beginCaptures:
      0: { name: punctuation.section.embedded.begin.xdml }
    end: "%>"
    endCaptures:
      0: { name: punctuation.section.embedded.end.xdml }
    name: source.java-props.embedded.xdml
    patterns:
      - match: page|include|taglib
        name: keyword.other.page-props.xdml
  - begin: "<%[!=]?(?!--)"
    beginCaptures:
      0: { name: punctuation.section.embedded.begin.xdml }
    end: (?!--)%>
    endCaptures:
      0: { name: punctuation.section.embedded.end.xdml }
    name: source.java.embedded.xdml
    patterns:
      - include: source.java
  - begin: '<!\[CDATA\['
    beginCaptures:
      0: { name: punctuation.definition.string.begin.xdml }
    end: "]]>"
    endCaptures:
      0: { name: punctuation.definition.string.end.xdml }
    name: string.unquoted.cdata.xdml
repository:
  EntityDecl:
    begin: (<!)(ENTITY)\s+(%\s+)?([:a-zA-Z_][:a-zA-Z0-9_.-]*)(\s+(?:SYSTEM|PUBLIC)\s+)?
    captures:
      1: { name: punctuation.definition.tag.xdml }
      2: { name: keyword.other.entity.xdml }
      3: { name: punctuation.definition.entity.xdml }
      4: { name: variable.language.entity.xdml }
      5: { name: keyword.other.entitytype.xdml }
    end: (>)
    patterns:
      - include: "#double-quoted-string-expression"
      - include: "#single-quoted-string-expression"
  bare-ampersand:
    match: "&"
    name: invalid.illegal.bad-ampersand.xdml

  #region xdml

  # 多行插值表达式
  insert-multiline-expression:
    begin: "{{"
    end: "}}"
    captures:
      0: { name: punctuation.definition.tag.xdml }
    name: markup.italic.namespace.xdml
    patterns:
      - include: "#entity"
      - include: "#single-quoted-string-expression"
      - include: "#double-quoted-string-expression"
      - include: "#ns-bind-insert-expression"

  # 插值内部namespace绑定表达式
  ns-bind-insert-expression:
    captures:
      1: { name: entity.name.type.localname.xdml }
      2: { name: markup.italic.namespace.xdml }
      3: { name: punctuation.definition.tag.xdml }
      4: { name: markup.italic.namespace.xdml }
      5: { name: keyword.operator.xdml }
      6: { name: support.variable.xdml }
    match: (([a-zA-Z0-9_-]+)(:)([a-zA-Z0-9_]+))\s*(=)\s*([a-zA-Z0-9_]+)
    name: markup.other.xdml

  string-formal-expression:
    patterns:
      - include: "#ns-bind-insert-expression"

  ns-bind-tag-stuff:
    patterns:
      - captures:
          1: { name: markup.italic.namespace.xdml }
          2: { name: punctuation.definition.tag.xdml }
          3: { name: punctuation.separator.namespace.xdml }
          4: { name: entity.other.attribute-name.localname.xdml }
          5: { name: string.quoted.double.xdml }
          6: { name: punctuation.definition.string.begin.xdml }
          7: { name: markup.italic.namespace.xdml }
          8: { name: punctuation.definition.string.end.xdml }
          9: { name: entity.name.type.localname.xdml }
          10: { name: markup.italic.namespace.xdml }
          11: { name: punctuation.definition.tag.xdml }
          12: { name: markup.italic.namespace.xdml }
          13: { name: keyword.operator.xdml }
          14: { name: support.variable.xdml }
        match: (?:^|\s+)([-\w.]+)((:))([-\w.:]+)\s*=((")(((([a-zA-Z0-9_-]+)(:)([a-zA-Z0-9_]+))\s*(=)\s*([a-zA-Z0-9_]+))|(?:[^"]*))("))
      - include: "#string-formal-expression"

  ns-bind-tag-stuff-single:
    patterns:
      - captures:
          1: { name: markup.italic.namespace.xdml }
          2: { name: punctuation.definition.tag.xdml }
          3: { name: punctuation.separator.namespace.xdml }
          4: { name: entity.other.attribute-name.localname.xdml }
          5: { name: string.quoted.double.xdml }
          6: { name: punctuation.definition.string.begin.xdml }
          7: { name: markup.italic.namespace.xdml }
          8: { name: punctuation.definition.string.end.xdml }
          9: { name: entity.name.type.localname.xdml }
          10: { name: markup.italic.namespace.xdml }
          11: { name: punctuation.definition.tag.xdml }
          12: { name: markup.italic.namespace.xdml }
          13: { name: keyword.operator.xdml }
          14: { name: support.variable.xdml }
        match: (?:^|\s+)([-\w.]+)((:))([-\w.:]+)\s*=((')(((([a-zA-Z0-9_-]+)(:)([a-zA-Z0-9_]+))\s*(=)\s*([a-zA-Z0-9_]+))|(?:[^']*))('))
      - include: "#string-formal-expression"

  # 双引号表达式，支持插值绑定
  double-quoted-string-expression:
    begin: '"'
    beginCaptures:
      0: { name: punctuation.definition.string.begin.xdml }
    end: '"'
    endCaptures:
      0: { name: punctuation.definition.string.end.xdml }
    name: string.quoted.double.xdml
    patterns:
      - include: "#entity"
      - include: "#bare-ampersand"
      - include: "#insert-multiline-expression"

  # 单引号表达式，支持插值绑定
  single-quoted-string-expression:
    begin: "'"
    beginCaptures:
      0: { name: punctuation.definition.string.begin.xdml }
    end: "'"
    endCaptures:
      0: { name: punctuation.definition.string.end.xdml }
    name: string.quoted.single.xdml
    patterns:
      - include: "#entity"
      - include: "#bare-ampersand"
      - include: "#insert-multiline-expression"

  #endregion xdml

  doublequotedString:
    begin: '"'
    beginCaptures:
      0: { name: punctuation.definition.string.begin.xdml }
    end: '"'
    endCaptures:
      0: { name: punctuation.definition.string.end.xdml }
    name: string.quoted.double.xdml
    patterns:
      - include: "#entity"
      - include: "#bare-ampersand"
  singlequotedString:
    begin: "'"
    beginCaptures:
      0: { name: punctuation.definition.string.begin.xdml }
    end: "'"
    endCaptures:
      0: { name: punctuation.definition.string.end.xdml }
    name: string.quoted.single.xdml
    patterns:
      - include: "#entity"
      - include: "#bare-ampersand"
  entity:
    captures:
      1: { name: punctuation.definition.constant.xdml }
      3: { name: punctuation.definition.constant.xdml }
    match: "(&)([:a-zA-Z_][:a-zA-Z0-9_.-]*|#[0-9]+|#x[0-9a-fA-F]+)(;)"
    name: constant.character.entity.xdml
  internalSubset:
    begin: '(\[)'
    captures:
      1: { name: punctuation.definition.constant.xdml }
    end: '(\])'
    name: meta.internalsubset.xdml
    patterns:
      - include: "#EntityDecl"
      - include: "#parameterEntity"
      - include: "#comments"
  parameterEntity:
    captures:
      1: { name: punctuation.definition.constant.xdml }
      3: { name: punctuation.definition.constant.xdml }
    match: "(%)([:a-zA-Z_][:a-zA-Z0-9_.-]*)(;)"
    name: constant.character.parameter-entity.xdml
  tagStuff:
    patterns:
      - captures:
          # 1: { name: entity.other.attribute-name.namespace.xdml }
          1: { name: markup.italic.namespace.xdml }
          # 2: { name: entity.other.attribute-name.xdml }
          2: { name: punctuation.definition.tag.xdml }
          3: { name: punctuation.separator.namespace.xdml }
          4: { name: entity.other.attribute-name.localname.xdml }
        match: '(?:^|\s+)(?:([-\w.]+)((:)))?([-\w.:]+)\s*='
      - include: "#double-quoted-string-expression"
      - include: "#single-quoted-string-expression"
  comments:
    patterns:
      - begin: <%--
        captures:
          0: { name: punctuation.definition.comment.xdml }
          end: "--%>"
          name: comment.block.xdml
      - begin: <!--
        captures:
          0: { name: punctuation.definition.comment.xdml }
        end: "-->"
        name: comment.block.xdml
        patterns:
          - begin: "--(?!>)"
            captures:
              0: { name: invalid.illegal.bad-comments-or-CDATA.xdml }
